<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.pal.AppTest" time="0.305" tests="83" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="15"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/asoni/devwork/target/test-classes:/Users/asoni/devwork/target/classes:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar:/Users/asoni/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/asoni/.m2/repository/org/junit/platform/junit-platform-engine/1.7.0/junit-platform-engine-1.7.0.jar:/Users/asoni/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/asoni/.m2/repository/org/junit/platform/junit-platform-commons/1.7.0/junit-platform-commons-1.7.0.jar:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.0/junit-jupiter-params-5.7.0.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://openjdk.java.net/"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="15"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/asoni/devwork/target/surefire/surefirebooter15981256744419333236.jar /Users/asoni/devwork/target/surefire 2021-01-11T15-14-15_599-jvmRun1 surefire126659320875202776tmp surefire_06130514474444493043tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/asoni/devwork/target/test-classes:/Users/asoni/devwork/target/classes:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar:/Users/asoni/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/asoni/.m2/repository/org/junit/platform/junit-platform-engine/1.7.0/junit-platform-engine-1.7.0.jar:/Users/asoni/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/asoni/.m2/repository/org/junit/platform/junit-platform-commons/1.7.0/junit-platform-commons-1.7.0.jar:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar:/Users/asoni/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.0/junit-jupiter-params-5.7.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/asoni"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2020-10-20"/>
    <property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/asoni/devwork"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="surefire.real.class.path" value="/Users/asoni/devwork/target/surefire/surefirebooter15981256744419333236.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="15.0.1+9"/>
    <property name="user.name" value="asoni"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.14.6"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/asoni/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/66/nmm2hpbx76v58nttl96dncg40000gn/T/"/>
    <property name="java.version" value="15.0.1"/>
    <property name="user.dir" value="/Users/asoni/devwork"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.library.path" value="/Users/asoni/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="N/A"/>
    <property name="java.vm.version" value="15.0.1+9"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="59.0"/>
  </properties>
  <testcase name="testNumIdenticalPairs{int[], int}[1]" classname="com.pal.AppTest" time="0.059"/>
  <testcase name="testNumIdenticalPairs{int[], int}[2]" classname="com.pal.AppTest" time="0.003"/>
  <testcase name="testNumIdenticalPairs{int[], int}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testFindNumbers{int[], int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testFindNumbers{int[], int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[4]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[5]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testIsPrefixOfWord{String, String, int}[6]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testCountConsistentStrings{String, String[], int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testCountConsistentStrings{String, String[], int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testCountConsistentStrings{String, String[], int}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testHammingDistance{int, int, int}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testHammingDistance{int, int, List}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testSortString{int[], int[]}[1]" classname="com.pal.AppTest" time="0.006"/>
  <testcase name="testSortString{int[], int[]}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSortString{int[], int[]}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSortString{String, String}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testSortString{String, String}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSortString{String, String}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSortString{String, String}[4]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testSortString{String, String}[5]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testDiStringMatch{String, int[]}[1]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testDiStringMatch{String, int[]}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testDiStringMatch{String, int[]}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testDiStringMatch{String, String, String[]}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testDiStringMatch{String, String, String[]}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSortedSquares{int[], int[]}[1]" classname="com.pal.AppTest" time="0.003"/>
  <testcase name="testSortedSquares{int[], int[]}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testnumberOfSteps{int, int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testnumberOfSteps{int, int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testnumberOfSteps{int, int}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testDecompressRLElist{int[], int[]}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testDecompressRLElist{int[], int[]}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testXorOperation{int, int, int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testXorOperation{int, int, int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testXorOperation{int, int, int}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testXorOperation{int, int, int}[4]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testReplaceElements{int[], int[]}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testReplaceElements{int[], int[]}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testFizzBuzz{int, List}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testSubtractProductAndSum{int, int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testSubtractProductAndSum{int, int}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testSubtractProductAndSum{int, int}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testCreateTargetArray{int[], int[], int[]}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testCreateTargetArray{int[], int[], int[]}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testCreateTargetArray{int[], int[], int[]}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testMaximum69Number{int, int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testMaximum69Number{int, int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testReverseWords{String, String}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testMaxDepth{String, int}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testMaxDepth{String, int}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testMaxDepth{String, int}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testMaxDepth{String, int}[4]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testRestoreString{String, int[], String}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testRestoreString{String, int[], String}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testRestoreString{String, int[], String}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testRestoreString{String, int[], String}[4]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testRestoreString{String, int[], String}[5]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testUniqueMorseRepresentations{String[], int}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testAddCar{int, int, int, int[], boolean[]}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testHalvesAreAlike{String, boolean}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testHalvesAreAlike{String, boolean}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testHalvesAreAlike{String, boolean}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testHalvesAreAlike{String, boolean}[4]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testChangeCase{String, String}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testChangeCase{String, String}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testChangeCase{String, String}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testGetDecimalValue{ListNode, int}[1]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testGetDecimalValue{ListNode, int}[2]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testGetDecimalValue{ListNode, int}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testGetDecimalValue{ListNode, int}[4]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testGetDecimalValue{ListNode, int}[5]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testBalancedStringSplit{String, int}[1]" classname="com.pal.AppTest" time="0.002"/>
  <testcase name="testBalancedStringSplit{String, int}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testBalancedStringSplit{String, int}[3]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testBalancedStringSplit{String, int}[4]" classname="com.pal.AppTest" time="0"/>
  <testcase name="testKidsWithCandies{int[], int, List}[1]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testKidsWithCandies{int[], int, List}[2]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testKidsWithCandies{int[], int, List}[3]" classname="com.pal.AppTest" time="0.001"/>
  <testcase name="testKidsWithCandies{int[], int, List}[4]" classname="com.pal.AppTest" time="0.001"/>
</testsuite>